
// This file has been generated by the GUI designer. Do not modify.
namespace Chrono
{
	public partial class LoggerWindow
	{
		private global::Gtk.UIManager UIManager;
		private global::Gtk.Action FileAction;
		private global::Gtk.Action QuitAction;
		private global::Gtk.Action HelpAction;
		private global::Gtk.Action AboutAction;
		private global::Gtk.Action EditAction;
		private global::Gtk.Action CopyAction;
		private global::Gtk.Action DeleteAction;
		private global::Gtk.Action SelectAllAction;
		private global::Gtk.Action ExportAction;
		private global::Gtk.Action StopwatchesAction;
		private global::Gtk.VBox vbox1;
		private global::Gtk.MenuBar menubar1;
		private global::Gtk.ScrolledWindow GtkScrolledWindow;
		private global::Gtk.TreeView logView;
		
		protected virtual void Build ()
		{
			global::Stetic.Gui.Initialize (this);
			// Widget Chrono.LoggerWindow
			this.UIManager = new global::Gtk.UIManager ();
			global::Gtk.ActionGroup w1 = new global::Gtk.ActionGroup ("Default");
			this.FileAction = new global::Gtk.Action ("FileAction", global::Mono.Unix.Catalog.GetString ("File"), null, null);
			this.FileAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("File");
			w1.Add (this.FileAction, null);
			this.QuitAction = new global::Gtk.Action ("QuitAction", global::Mono.Unix.Catalog.GetString ("Quit"), null, null);
			this.QuitAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Quit");
			w1.Add (this.QuitAction, "<Primary><Mod2>q");
			this.HelpAction = new global::Gtk.Action ("HelpAction", global::Mono.Unix.Catalog.GetString ("Help"), null, null);
			this.HelpAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Help");
			w1.Add (this.HelpAction, null);
			this.AboutAction = new global::Gtk.Action ("AboutAction", global::Mono.Unix.Catalog.GetString ("About"), null, null);
			this.AboutAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("About");
			w1.Add (this.AboutAction, "F1");
			this.EditAction = new global::Gtk.Action ("EditAction", global::Mono.Unix.Catalog.GetString ("Edit"), null, null);
			this.EditAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Edit");
			w1.Add (this.EditAction, null);
			this.CopyAction = new global::Gtk.Action ("CopyAction", global::Mono.Unix.Catalog.GetString ("Copy"), null, null);
			this.CopyAction.Sensitive = false;
			this.CopyAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Copy");
			w1.Add (this.CopyAction, "<Control>c");
			this.DeleteAction = new global::Gtk.Action ("DeleteAction", global::Mono.Unix.Catalog.GetString ("Delete"), null, null);
			this.DeleteAction.Sensitive = false;
			this.DeleteAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Delete");
			w1.Add (this.DeleteAction, "Delete");
			this.SelectAllAction = new global::Gtk.Action ("SelectAllAction", global::Mono.Unix.Catalog.GetString ("Select all"), null, null);
			this.SelectAllAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Select all");
			w1.Add (this.SelectAllAction, "<Control>a");
			this.ExportAction = new global::Gtk.Action ("ExportAction", global::Mono.Unix.Catalog.GetString ("Export"), null, null);
			this.ExportAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Export");
			w1.Add (this.ExportAction, null);
			this.StopwatchesAction = new global::Gtk.Action ("StopwatchesAction", global::Mono.Unix.Catalog.GetString ("Stopwatches..."), null, null);
			this.StopwatchesAction.ShortLabel = global::Mono.Unix.Catalog.GetString ("Stopwatches");
			w1.Add (this.StopwatchesAction, null);
			this.UIManager.InsertActionGroup (w1, 0);
			this.AddAccelGroup (this.UIManager.AccelGroup);
			this.Name = "Chrono.LoggerWindow";
			this.Title = global::Mono.Unix.Catalog.GetString ("Chrono Marker Logs");
			this.Icon = global::Gdk.Pixbuf.LoadFromResource ("icon.ico");
			// Container child Chrono.LoggerWindow.Gtk.Container+ContainerChild
			this.vbox1 = new global::Gtk.VBox ();
			this.vbox1.Name = "vbox1";
			// Container child vbox1.Gtk.Box+BoxChild
			this.UIManager.AddUiFromString ("<ui><menubar name='menubar1'><menu name='FileAction' action='FileAction'><menuitem name='ExportAction' action='ExportAction'/><separator/><menuitem name='QuitAction' action='QuitAction'/></menu><menu name='EditAction' action='EditAction'><menuitem name='SelectAllAction' action='SelectAllAction'/><menuitem name='CopyAction' action='CopyAction'/><separator/><menuitem name='DeleteAction' action='DeleteAction'/><separator/><menuitem name='StopwatchesAction' action='StopwatchesAction'/></menu><menu name='HelpAction' action='HelpAction'><menuitem name='AboutAction' action='AboutAction'/></menu></menubar></ui>");
			this.menubar1 = ((global::Gtk.MenuBar)(this.UIManager.GetWidget ("/menubar1")));
			this.menubar1.Name = "menubar1";
			this.vbox1.Add (this.menubar1);
			global::Gtk.Box.BoxChild w2 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.menubar1]));
			w2.Position = 0;
			w2.Expand = false;
			w2.Fill = false;
			// Container child vbox1.Gtk.Box+BoxChild
			this.GtkScrolledWindow = new global::Gtk.ScrolledWindow ();
			this.GtkScrolledWindow.Name = "GtkScrolledWindow";
			this.GtkScrolledWindow.ShadowType = ((global::Gtk.ShadowType)(1));
			// Container child GtkScrolledWindow.Gtk.Container+ContainerChild
			this.logView = new global::Gtk.TreeView ();
			this.logView.CanFocus = true;
			this.logView.Name = "logView";
			this.logView.EnableSearch = false;
			this.logView.Reorderable = true;
			this.GtkScrolledWindow.Add (this.logView);
			this.vbox1.Add (this.GtkScrolledWindow);
			global::Gtk.Box.BoxChild w4 = ((global::Gtk.Box.BoxChild)(this.vbox1 [this.GtkScrolledWindow]));
			w4.Position = 1;
			this.Add (this.vbox1);
			if ((this.Child != null)) {
				this.Child.ShowAll ();
			}
			this.DefaultWidth = 473;
			this.DefaultHeight = 373;
			this.Show ();
			this.QuitAction.Activated += new global::System.EventHandler (this.actionQuit_event);
			this.AboutAction.Activated += new global::System.EventHandler (this.helpAbout_event);
			this.CopyAction.Activated += new global::System.EventHandler (this.copyAction_event);
			this.DeleteAction.Activated += new global::System.EventHandler (this.deleteAction_event);
			this.SelectAllAction.Activated += new global::System.EventHandler (this.selectAllAction_event);
			this.ExportAction.Activated += new global::System.EventHandler (this.exportAction_event);
			this.StopwatchesAction.Activated += new global::System.EventHandler (this.editStopwatches_event);
			this.logView.PopupMenu += new global::Gtk.PopupMenuHandler (this.logViewPopup_event);
			this.logView.ButtonPressEvent += new global::Gtk.ButtonPressEventHandler (this.logViewButtonPress_event);
		}
	}
}
